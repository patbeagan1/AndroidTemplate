apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: config("libraries.gradle")

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.patbeagan1.example"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        debug {
            Properties properties = getLocalProperties()
            resValue "string", "cat_api_key", properties.getProperty("cat.api.key", "")
        }

        release {
            Properties properties = getLocalProperties()
            resValue "string", "cat_api_key", properties.getProperty("cat.api.key", "")

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

private Properties getLocalProperties() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties
}

dependencies {
    implementation lib.kotlinStd

    implementation lib.appcompat
    implementation lib.constraintlayout
    implementation lib.coreKtx
    implementation lib.viewbinding
    implementation lib.lifecycleViewModel
    implementation lib.fragmentExtensions
    implementation lib.material
    implementation lib.coil

    testImplementation lib.testJunit

    implementation lib.rxAndroid
    implementation lib.rxKotlin
    implementation lib.hilt

    kapt lib.hiltCompiler
    implementation lib.fragmentExtensions
    implementation libpack.retrofitAll
    implementation lib.rxbinding
    runtimeOnly lib.livedata

}